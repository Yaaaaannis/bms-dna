/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { Group, Mesh } from 'three'

interface DnaModelProps {
  position?: [number, number, number]
  scale?: [number, number, number]
  rotation?: [number, number, number]
}

export function DnaModel(props: DnaModelProps) {
  const group = useRef<Group>(null)
  const { nodes, materials, animations } = useGLTF('/dna.glb')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    // Jouer l'animation de base du modèle si elle existe
    if (actions && Object.keys(actions).length > 0) {
      // Jouer la première animation disponible
      const firstAction = Object.values(actions)[0]
      if (firstAction) {
        firstAction.play()
      }
    }
  }, [actions])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="DNA_logo_3d"
          castShadow
          receiveShadow
          geometry={(nodes.DNA_logo_3d as Mesh).geometry}
          material={materials.material0}
          rotation={[Math.PI / 2, 0, 0]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/dna.glb')

